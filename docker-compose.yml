services:
  # Service Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: facturly_backend
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGODB_URI=${MONGODB_URI}
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev
    networks:
      - facturly_net

  # Service Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: facturly_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next # <-- LIGNE IMPORTANTE : préserve le dossier .next du conteneur
    # ON CHANGE LA COMMANDE DE DÉMARRAGE ICI
    command: npm run dev
    networks:
      - facturly_net

  # Service Base de données MongoDB
  mongodb:
    image: mongo:7.0
    container_name: facturly_mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - facturly_net

  # Interface d'administration MongoDB (Mongo Express)
  mongo-express:
    image: mongo-express:latest
    container_name: facturly_mongo_express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - facturly_net

networks:
  facturly_net:
    driver: bridge

volumes:
  mongodata:
