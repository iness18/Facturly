#!/bin/bash

# Script de d√©ploiement Facturly - Migration MongoDB
# Usage: ./scripts/deploy.sh [staging|production]

set -e  # Arr√™ter en cas d'erreur

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fonction de logging
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# V√©rifier les arguments
ENVIRONMENT=${1:-staging}

if [[ "$ENVIRONMENT" != "staging" && "$ENVIRONMENT" != "production" ]]; then
    error "Environnement invalide. Utilisez 'staging' ou 'production'"
fi

log "üöÄ D√©marrage du d√©ploiement Facturly - Environnement: $ENVIRONMENT"

# V√©rifier que nous sommes dans le bon r√©pertoire
if [[ ! -f "package.json" ]]; then
    error "Ce script doit √™tre ex√©cut√© depuis le r√©pertoire backend"
fi

# Charger les variables d'environnement
if [[ -f ".env.$ENVIRONMENT" ]]; then
    log "üìÑ Chargement des variables d'environnement pour $ENVIRONMENT"
    export $(cat .env.$ENVIRONMENT | grep -v '^#' | xargs)
    success "Variables d'environnement charg√©es"
else
    warning "Fichier .env.$ENVIRONMENT non trouv√©, utilisation des variables syst√®me"
fi

# V√©rifier les variables critiques
log "üîç V√©rification des variables d'environnement critiques..."

if [[ -z "$MONGODB_URI" ]]; then
    error "MONGODB_URI non d√©finie"
fi

if [[ -z "$JWT_SECRET" ]]; then
    error "JWT_SECRET non d√©finie"
fi

if [[ ${#JWT_SECRET} -lt 32 ]]; then
    error "JWT_SECRET doit contenir au moins 32 caract√®res"
fi

success "Variables d'environnement valid√©es"

# V√©rifier la connexion MongoDB
log "üîó Test de connexion MongoDB..."
if npm run mongodb:test:atlas; then
    success "Connexion MongoDB Atlas r√©ussie"
else
    error "√âchec de la connexion MongoDB Atlas"
fi

# Installation des d√©pendances
log "üì¶ Installation des d√©pendances..."
npm ci --only=production
success "D√©pendances install√©es"

# Build de l'application
log "üèóÔ∏è  Build de l'application..."
npm run build
success "Application build√©e"

# Tests MongoDB complets
log "üß™ Ex√©cution des tests MongoDB..."
if npm run mongodb:test; then
    success "Tests MongoDB r√©ussis"
else
    error "√âchec des tests MongoDB"
fi

# Backup de s√©curit√© (si en production)
if [[ "$ENVIRONMENT" == "production" ]]; then
    log "üíæ Cr√©ation d'un backup de s√©curit√©..."
    BACKUP_DIR="./backups/pre-deploy-$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$BACKUP_DIR"
    
    if command -v mongodump &> /dev/null; then
        mongodump --uri="$MONGODB_URI" --out="$BACKUP_DIR" || warning "Backup automatique √©chou√©"
        success "Backup cr√©√© dans $BACKUP_DIR"
    else
        warning "mongodump non disponible, backup manuel recommand√©"
    fi
fi

# V√©rification finale de l'application
log "üîç V√©rification finale de l'application..."
timeout 30s npm run start:prod &
APP_PID=$!

sleep 10

# Test de sant√© de l'API
if curl -f http://localhost:${PORT:-3001}/health > /dev/null 2>&1; then
    success "API r√©pond correctement"
    kill $APP_PID 2>/dev/null || true
else
    kill $APP_PID 2>/dev/null || true
    error "L'API ne r√©pond pas correctement"
fi

# R√©sum√© du d√©ploiement
log "üìã R√©sum√© du d√©ploiement:"
echo "  ‚Ä¢ Environnement: $ENVIRONMENT"
echo "  ‚Ä¢ MongoDB URI: ${MONGODB_URI%%@*}@***"
echo "  ‚Ä¢ Port: ${PORT:-3001}"
echo "  ‚Ä¢ Node ENV: ${NODE_ENV:-development}"
echo "  ‚Ä¢ Frontend URL: ${FRONTEND_URL:-non d√©finie}"

success "üéâ D√©ploiement $ENVIRONMENT termin√© avec succ√®s!"

# Instructions post-d√©ploiement
log "üìù Instructions post-d√©ploiement:"
echo "  1. V√©rifiez les logs de l'application"
echo "  2. Testez les endpoints critiques"
echo "  3. Surveillez les m√©triques MongoDB Atlas"
echo "  4. Configurez les alertes de monitoring"

if [[ "$ENVIRONMENT" == "production" ]]; then
    echo "  5. Planifiez les backups automatiques"
    echo "  6. Configurez la rotation des logs"
    echo "  7. V√©rifiez les certificats SSL"
fi

log "üöÄ Application pr√™te √† √™tre d√©marr√©e avec: npm run start:prod"